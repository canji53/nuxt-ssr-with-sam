name: Deployment for SSR Nuxt

on:
  pull_request:
    branches:
      - master
    types: [closed]

env:
  ENVIRONMENT: ${{ (github.base_ref == 'master' && 'prod') || 'stg' }}
  SUB_DOMAIN: ${{ (github.base_ref == 'master' && 'www') || 'stg' }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install sam
        run: |
          python -m pip install --upgrade pip
          pip install aws-sam-cli

      - name: Set up Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12

      - name: Linter and Formetter JS and Vue
        run: |
          npm install
          npm run lint
          npm run lintfix

      - name: Build Nuxt App
        run: |
          npm run build

      - name: Install npm packages for render lambda layer
        run: |
          rsync render/package.json .layer/render/nodejs
          cd .layer/render/nodejs
          npm install --production

      - name: Install npm packages for nuxt lambda layer
        run: |
          rsync package.json .layer/nuxt/nodejs
          cd .layer/nuxt/nodejs
          npm install --production

      - name: Copy to lambda for requirement files
        run: |
          rsync -Rr .nuxt/dist/server render/
          rsync -Rr nuxt-app render/
          rsync nuxt.config.js render/

      - name: Build by SAM
        run: |
          sam build

      - name: Packaging by SAM
        run: |
          sam package \
            --template-file template.yml \
            --s3-bucket ${{ secrets.CFN_TEMPLATES_BUCKET }} \
            --output-template-file deploy.yml

      - name: Deploy by SAM
        run: |
          sam deploy \
            --template-file deploy.yml \
            --stack-name nuxt-ssr \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
                Environment=$ENVIRONMENT \
                SubDomain=$SUB_DOMAIN \
                CFSSLCertificateId=${{ secrets.CFSSL_CERTIFICATE_ID }}

      - name: Deploy static assets to S3
        run: |
          aws s3 sync nuxt-app/static s3://localing-clinet-$ENVIRONMENT-static-assets --delete
          aws s3 sync .nuxt/dist/client s3://localing-clinet-$ENVIRONMENT-static-assets/_nuxt --delete

      - name: Delete production cloudfront cache
        if: github.base_ref == 'master'
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_CLOUDFRONT_ID }} --paths '/*'
